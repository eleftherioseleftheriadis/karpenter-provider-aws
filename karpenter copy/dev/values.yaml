karpenter:
  nameOverride: ""
  fullnameOverride: ""

  additionalLabels: 
    app.kubernetes.io/version: "1.3.3"
  additionalAnnotations: {}

  imagePullPolicy: IfNotPresent
  imagePullSecrets: []

  service:
    annotations: {}

  serviceAccount:
    create: true
    name: ""
    annotations: {}

  additionalClusterRoleRules: []

  serviceMonitor:
    enabled: true
    additionalLabels: {}
    endpointConfig: {}

  replicas: 2
  revisionHistoryLimit: 10

  strategy:
    rollingUpdate:
      maxUnavailable: 1

  podLabels: {}
  podAnnotations: {}

  podDisruptionBudget:
    name: karpenter
    maxUnavailable: 1

  podSecurityContext:
    fsGroup: 65532

  priorityClassName: system-cluster-critical

  terminationGracePeriodSeconds:

  hostNetwork: false
  schedulerName: default-scheduler

  dnsPolicy: ClusterFirst
  dnsConfig: {}

  initContainers: {}

  nodeSelector:
    kubernetes.io/os: linux

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/nodepool
                operator: DoesNotExist
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: "kubernetes.io/hostname"

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule

  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists

  extraVolumes: []

  controller:
    containerName: controller
    image:
      repository: public.ecr.aws/karpenter/controller
      tag: 1.3.2
      digest: sha256:3fffcbbb6d0b1a2183a07bbe52c902d344fa41f8a8485de43760432ef7e2fd17
    env:
      - name: AWS_REGION
        value: eu-west-1
    envFrom: []
    resources: {}
    extraVolumeMounts: []
    sidecarContainer: []
    sidecarVolumeMounts: []
    metrics:
      port: 8080
    healthProbe:
      port: 8081

  webhook:
    enabled: true
    port: 8443
    metrics:
      port: 8001

  logLevel: info
  logOutputPaths:
    - stdout
  logErrorOutputPaths:
    - stderr

  settings:
    batchMaxDuration: 10s
    batchIdleDuration: 1s
    clusterCABundle: ""
    clusterName: "eks_cluster_dev"
    clusterEndpoint: "https://3AD8F8C85614282D478FFAB56E4037BF.gr7.eu-west-1.eks.amazonaws.com"
    isolatedVPC: false
    eksControlPlane: false
    vmMemoryOverheadPercent: 0.075
    interruptionQueue: "Karpenter-eks_cluster_dev"
    reservedENIs: "0"
    assumeRoleARN: ""
    assumeRoleDuration: 15m
    featureGates:
      drift: true
      nodeRepair: true
      reservedCapacity: false
      spotToSpotConsolidation: true
