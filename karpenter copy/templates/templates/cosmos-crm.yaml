apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  annotations:
    karpenter.sh/nodepool-hash: "11358001204461661007"
    karpenter.sh/nodepool-hash-version: v3
    karpenter.sh/stored-version-migrated: "true"
  name: cosmos-crm
spec:
  disruption:
    budgets:
      - duration: 24h
        nodes: 10%
        reasons:
          - Empty
          - Drifted
          - Underutilized
        schedule: "0 5 * * 6"
    consolidateAfter: 10m
    consolidationPolicy: WhenEmptyOrUnderutilized
  limits:
    cpu: 25
  template:
    metadata:
      labels:
        intent: cosmos-crm
    spec:
      expireAfter: 720h
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values:
            - amd64
            - arm64
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values:
            - m
            - r
            - t
        - key: karpenter.sh/capacity-type
          operator: In
          values:
            - spot
            - on-demand
        - key: karpenter.k8s.aws/instance-cpu
          operator: In
          values:
            - "2"
            - "4"
            - "8"
      taints:
        - effect: NoSchedule
          key: cosmos-crm
      terminationGracePeriod: 10m
